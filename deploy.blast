{"cells":[{"kind":2,"language":"javascript","value":"let myid = hashIdentity(\"wiorhiweoi2h3@3oihzDFSHJDFIOwHWERHWwerwe23$#%^@#$@!#$!@oiwhtyuhgjdfsd78790jhkhjoppsazwoih9028$%@@$$!346woehir\");\n\nlet icbl = icblast({ identity: myid });\n\nlet deployer = await icbl(\"pnhvg-fiaaa-aaaam-abzia-cai\");\n\nglobal({ deployer, myid, icbl });\n\n\nlog(myid.getPrincipal());"},{"kind":2,"language":"javascript","value":"await deployer.create_canister().then(log);"},{"kind":2,"language":"javascript","value":"await deployer.get_canister_id().then(log);"},{"kind":2,"language":"javascript","value":"let t = await readFileText(\"./image.text\");\n\nlet resp = await deployer.install({\n  decimals: 8,\n  token_symbol: \"KING\",\n  transfer_fee: 10000,\n  metadata: [\n\n    [\"icrc1:logo\",\n    {\n    Text: t\n    }\n    ]\n  ],\n  minting_account: {\n    owner: \"aaaaa-aa\",\n  },\n  initial_balances: [\n    [\n      {\n        owner: myid.getPrincipal(),\n      },\n      100000_0000_0000,\n    ],\n  ],\n  maximum_number_of_accounts: 10000000,\n  accounts_overflow_trim_quantity: 1000, /// How many accounts with lowest balances to purge when the number of accounts exceeds\n\n  fee_collector_account: {\n    owner: myid.getPrincipal()\n  },\n  token_name: \"King\",\n  feature_flags: {\n    icrc2: true,\n  },\n}, { reinstall: null });\n\nlog(resp);\n"},{"kind":2,"language":"javascript","value":"log(me);\n//  Reject text: Canister cannot grow memory by 2087726 bytes due to insufficient cycles. At least 512_146_721_890_963 additional cycles are required.\n"},{"kind":2,"language":"javascript","value":"let le = await icbl(\"pdfyo-6yaaa-aaaam-abzja-cai\");\n\nlet rez = await le.icrc1_transfer({\n  to: {\n    owner: \"sigaw-mgjqp-5ibq3-nt4ca-mdk26-g6vjn-rlqkz-d2uap-wxcxh-lnzsr-cqe\",\n  },\n  amount: 100_0000_0000\n});\n\n\nlog(toState(rez));\n\n// await Promise.all(Array(200).fill(0).map((_, i) => le.icrc1_transfer({\n//   to:{\n//     owner:Principal.fromText(\"pduvs-ihczz-c42ij-nxaqv-imlmp-zsn2b-2gtas-jqqzk-ssg3n-5xflw-wae\"),\n//     },\n//   amount: 100_0000_0000\n// })));\n  "}]}